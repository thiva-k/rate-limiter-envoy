static_resources:
  listeners:
    - name: main
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: web_service
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          request_handle:logInfo("Lua filter: onRequest called")
                          local remote_address = request_handle:streamInfo():downstreamDirectRemoteAddress()
                          local path = request_handle:headers():get(":path")

                          if path == "/" then
                            -- Fetch current rate limit count
                            local fetch_headers = {
                              [":method"] = "GET",
                              [":path"] = "/rate-limit",
                              ["remote_address"] = remote_address,
                              [":authority"] = "node"
                            }
                            local fetch_response_headers, fetch_response_body = request_handle:httpCall(
                              "node_cluster",
                              fetch_headers,
                              "",
                              5000
                            )

                            local count = tonumber(fetch_response_body)
                            request_handle:logInfo("Current rate limit count for " .. remote_address .. " is " .. count)

                            if count >= 5 then
                              request_handle:logInfo("Rate limit exceeded for " .. remote_address)
                              request_handle:respond(
                                {
                                  [":status"] = "429",
                                  ["content-type"] = "text/plain"
                                },
                                "Rate limit exceeded"
                              )
                            else
                              count = count + 1  -- Increment the rate limit count
                              local update_headers = {
                                [":method"] = "POST",
                                [":path"] = "/rate-limit",
                                ["remote_address"] = remote_address,
                                [":authority"] = "node",
                                ["x-rate-limit-count"] = tostring(count)
                              }
                              
                              local update_response_headers, update_response_body = request_handle:httpCall(
                                "node_cluster",
                                update_headers,
                                "",
                                5000
                              )
                              request_handle:logInfo("Rate limit incremented for " .. remote_address)
                            end
                          else
                            request_handle:logInfo("Skipping rate limit for path: " .. path)
                          end
                        end
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: node_cluster
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: node_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: node
                      port_value: 3000
    - name: web_service
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: web_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: webui
                      port_value: 8080

    - name: httpbin_service
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: httpbin_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: httpbin
                      port_value: 80
